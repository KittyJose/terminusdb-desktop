# This workflow will do a clean install of node dependencies, build the source code and run tests across different versions of node
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-nodejs-with-github-actions

name: Node.js CI

on:
  push:
    branches: [ dev, master ]

jobs:
  build_linux:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [12.x]

    steps:
    - uses: actions/checkout@v2
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v1
      with:
        node-version: ${{ matrix.node-version }}
    - run: npm install
    - run: curl -L 'https://dcm.ist/linux-bin-server' > public/TerminusDB.AppImage && chmod +x public/TerminusDB.AppImage
    - run: npx electron-builder build --linux appimage -p never

    - name: Upload a Build Artifact
      uses: actions/upload-artifact@v2.1.4
      with:
        name: terminusdb-desktop.AppImage
        path: dist/terminusdb-desktop-0.1.0.AppImage

  build_windows:
    runs-on: windows-latest

    steps:
    - uses: actions/checkout@v2
    - run: npm install
    - run: |
        curl -L 'https://dcm.ist/windows-bin-server' > temp.tar.gz
        mkdir public/windows
        cd public/windows
        tar xf ../../temp.tar.gz
        ls
        cd ../../
      shell: bash
    - run: npx electron-builder build -p never

    - name: Upload a Build Artifact
      uses: actions/upload-artifact@v2.1.4
      with:
        name: "terminusdb-desktop Setup 0.1.0.exe"
        path: "dist/terminusdb-desktop Setup 0.1.0.exe"

  deploy:
    runs-on: ubuntu-latest
    needs: [build_windows, build_linux]

    steps:
    - name: Delete tag and release
      uses: dev-drprasad/delete-tag-and-release@v0.1.2
      env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: dev-tag-release

    - uses: actions/download-artifact@v2
      with:
        name: terminusdb-desktop.AppImage

    - uses: actions/download-artifact@v2
      with:
        name: "terminusdb-desktop Setup 0.1.0.exe"

    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # This token is provided by Actions, you do not need to create your own token
      with:
        tag_name: dev-tag
        release_name: dev
        body: 'dev ci'
        draft: false
        prerelease: true

    - name: Upload Release Asset
      id: upload-release-asset 
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./terminusdb-desktop Setup 0.1.0.exe
        asset_name: "terminusdb-desktop Setup 0.1.0.exe"
        asset_content_type: "application/octet-stream"

    - name: Upload Release Asset
      id: upload-release-asset-appimage
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./terminusdb-desktop.AppImage
        asset_name: "terminusdb-desktop.AppImage"
        asset_content_type: "application/octet-stream"
